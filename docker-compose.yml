services:
  postgres:
    image: postgres:12.22
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orderprocessing
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d orderprocessing"]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    environment:
        PGADMIN_DEFAULT_EMAIL: dev@postgres.com
        PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
        - 5431:80
    depends_on:
        - postgres
  orderprocessing.api:
    build:
      context: ./OrderProcessing.Api
      dockerfile: Dockerfile
    environment:
      CONNECTIONSTRINGS__POSTGRESQL: "Host=postgres;Database=orderprocessing;Username=postgres;Password=postgres;"
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - 8080:8080
      - 8081:8081  
    depends_on:
      postgres:
        condition: service_healthy

  orderprocessing.worker:
    build:
      context: ./OrderProcessing.Worker
      dockerfile: Dockerfile
    environment:
      CONNECTIONSTRINGS__POSTGRESQL: "Host=postgres;Database=orderprocessing;Username=postgres;Password=postgres"
    depends_on:
      postgres:
        condition: service_healthy

